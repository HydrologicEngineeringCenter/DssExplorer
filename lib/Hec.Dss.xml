<?xml version="1.0"?>
<doc>
    <assembly>
        "Hec.Dss"
    </assembly>
    <members>
        <member name="M:Hec.Dss.DSS.ZUndelete(System.Int64[]@,System.String)">
            <summary>
Returns STATUS_OKAY for successfully undeleting the record, or an error code for an unsuccessful call.
</summary>
            <summary>
Returns STATUS_OKAY for successfully undeleting the record, or an error code for an unsuccessful call.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZDelete(System.Int64[]@,System.String)">
            <summary>
You can free(a single record by calling the function “zdelete” with the pathname of the record you want to delete.  If you accidently delete a record, it might be recovered by calling zundelete.  However, deleted space is returned to the recycle pool, so that function is not guaranteed to work, and there is less probability of an unfree(as more is written to the file.  “Squeezing” a file permanently removes space from undeleted records and is recommended after many deletes or renames, etc.   Returns STATUS_OKAY for successfully deleting the record, or an error code for an unsuccessful call.  Errors include the record does not exist, or you do not have write access, among others.
</summary>
            <summary>
You can delete a single record by calling the function “zdelete” with the pathname of the record you want to delete.  If you accidently delete a record, it might be recovered by calling zundelete.  However, deleted space is returned to the recycle pool, so that function is not guaranteed to work, and there is less probability of an undelete as more is written to the file.  “Squeezing” a file permanently removes space from undeleted records and is recommended after many deletes or renames, etc.   Returns STATUS_OKAY for successfully deleting the record, or an error code for an unsuccessful call.  Errors include the record does not exist, or you do not have write access, among others.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZRename(System.Int64[]@,System.String,System.String)">
            <summary>
You can rename a single record by calling the function “zrename” and providing the old pathname and the new one.  You cannot rename the D (date) or E (interval) parts of a time series record; that data set must be converted for those parts to change.  If you try to rename those, the record will become unreadable.  Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
            <summary>
You can rename a single record by calling the function “zrename” and providing the old pathname and the new one.  You cannot rename the D (date) or E (interval) parts of a time series record; that data set must be converted for those parts to change.  If you try to rename those, the record will become unreadable.  Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCopyRecord(System.Int64[]@,System.Int64[]@,System.String,System.String)">
            <summary>
To copy a record to another DSS file, use the function “zcopyRecord”.  You can change the pathname when you copy with the record, buy providing a new name, or you can just use the same name.  You cannot change the D (date) or E (interval) parts of a time series record; that data must be converted for those parts to change.  Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
            <summary>
To copy a record to another DSS file, use the function “zcopyRecord”.  You can change the pathname when you copy with the record, buy providing a new name, or you can just use the same name.  You cannot change the D (date) or E (interval) parts of a time series record; that data must be converted for those parts to change.  Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZDuplicateRecord(System.Int64[]@,System.String,System.String)">
            <summary>
To duplicate a record within a file, use the function “zduplicateRecord” with the existing pathname and the new one.  You cannot change the D (date) or E (interval) parts of a time series record; that data must be converted for those parts to change.  If you try to rename those, the record will become unreadable. Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
            <summary>
To duplicate a record within a file, use the function “zduplicateRecord” with the existing pathname and the new one.  You cannot change the D (date) or E (interval) parts of a time series record; that data must be converted for those parts to change.  If you try to rename those, the record will become unreadable. Returns STATUS_OKAY for a successful rename or an error code for an unsuccessful call.  Errors include the old record does not exist, the new record already exists, you do not have write access, among others.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructFree(Hec.Dss.ZStruct@)">
            <summary>
//zstructFree frees all memory that HEC-DSS has allocated in the struct passed in.  It will not free memory that the calling functions (outside of the HEC-DSS library) have allocated.  There should be a matching //zstructFree for each zstructNew.
</summary>
            <summary>
zstructFree frees all memory that HEC-DSS has allocated in the struct passed in.  It will not free memory that the calling functions (outside of the HEC-DSS library) have allocated.  There should be a matching zstructFree for each zstructNew.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCatalogToFile(System.Int64[]@,System.Int32,System.Int32,System.Int32)">
            <summary>
Write the catalog to a file that you have opened.  This is the same as zcatalogFile, but you are responsible for opening and closing the file.  You pass in either a valid (opened) C handle or opened Fortran unit number.  This call is usually made when you want pathnames, but do not want to allocate much memory (and in that case, you should set boolSort to zero).
</summary>
            <summary>
Write the catalog to a file that you have opened.  This is the same as zcatalogFile, but you are responsible for opening and closing the file.  You pass in either a valid (opened) C handle or opened Fortran unit number.  This call is usually made when you want pathnames, but do not want to allocate much memory (and in that case, you should set boolSort to zero).
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCatalogFile(System.Int64[]@,System.String,System.Int32,System.String)">
            <summary>
Fills in a catalog struct of all pathnames in the DSS file.  If you want the pathnames to be sorted, set boolSorted to 1, otherwise 0.   Returns the number of pathnames in the struct, otherwise a negative for an error.
</summary>
            <summary>
Fills in a catalog struct of all pathnames in the DSS file.  If you want the pathnames to be sorted, set boolSorted to 1, otherwise 0.   Returns the number of pathnames in the struct, otherwise a negative for an error.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCatalog(System.Int64[]@,System.String,Hec.Dss.ZStructCatalogWrapper@,System.Int32)">
            <summary>
Fills in a catalog struct of all pathnames in the DSS file.  If you want the pathnames to be sorted, set boolSorted to 1, otherwise 0.   Returns the number of pathnames in the struct, otherwise a negative for an error.
</summary>
            <summary>
Fills in a catalog struct of all pathnames in the DSS file.  If you want the pathnames to be sorted, set boolSorted to 1, otherwise 0.   Returns the number of pathnames in the struct, otherwise a negative for an error.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.zStructCatalogNew">
            <summary>
Creates a new struct used for storing the catalog.  Be sure to call //zstructFree() when you are done.
</summary>
            <summary>
Creates a new struct used for storing the catalog.  Be sure to call zstructFree() when you are done.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZpdRetrieve(System.Int64[]@,Hec.Dss.ZStructPairedDataWrapper@,System.Int32)">
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructPdNew(System.String)">
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructPdNewDoubles(System.String,System.Double[]@,System.Double[]@,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
zstructPdNewDoubles is for storing paired data double values.  Pass in the array of double ordinates (independent variable), and the double values array (dependent variable), the number of ordinates and number of curves.  The doubleValues array must contain numberOrdinates * numberCurves values.  Since C doesn’t know about doubly dimensioned arrays (very well), the doubleValues array is often a single dimensioned array numberOrdinates * numberCurves values long.
</summary>
            <summary>
zstructPdNewDoubles is for storing paired data double values.  Pass in the array of double ordinates (independent variable), and the double values array (dependent variable), the number of ordinates and number of curves.  The doubleValues array must contain numberOrdinates * numberCurves values.  Since C doesn’t know about doubly dimensioned arrays (very well), the doubleValues array is often a single dimensioned array numberOrdinates * numberCurves values long.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructPdNewFloats(System.String,System.Single[]@,System.Single[]@,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
zstructPdNewFloats is for storing paired data float values.  Pass in the array of float ordinates (independent variable), and the float values array (dependent variable), the number of ordinates and number of curves.  The floatValues array must contain numberOrdinates * numberCurves values.  Since C doesn’t know about doubly dimensioned arrays (very well), the floatValues array is often a single dimensioned array numberOrdinates * numberCurves values long.
</summary>
            <summary>
zstructPdNewFloats is for storing paired data float values.  Pass in the array of float ordinates (independent variable), and the float values array (dependent variable), the number of ordinates and number of curves.  The floatValues array must contain numberOrdinates * numberCurves values.  Since C doesn’t know about doubly dimensioned arrays (very well), the floatValues array is often a single dimensioned array numberOrdinates * numberCurves values long.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZTSends(System.Int64[]@,System.String,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.UInt64)">
            <summary>
 Gets the time window for a data set
</summary>
            <summary>
 Gets the time window for a data set
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZTsRetrieve(System.Int64[]@,Hec.Dss.ZStructTimeSeriesWrapper@,System.Int32,System.Int32,System.Int32)">
            <summary>
 This is the function to call to retrieve time series data in a HEC-DSS file.  The data set may be regular-interval or irregular interval and the DSS file version may be either version 7 or version 6 (without 7 extensions).  There are no other functions that are used to store time series data. 
</summary>
            <summary>
 This is the function to call to retrieve time series data in a HEC-DSS file.  The data set may be regular-interval or irregular interval and the DSS file version may be either version 7 or version 6 (without 7 extensions).  There are no other functions that are used to read time series data. 
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZTsStore(System.Int64[]@,Hec.Dss.ZStructTimeSeriesWrapper@,System.Int32)">
            <summary>
This is the function to call to store time series data in a HEC-DSS file.  The data set may be regular-interval or irregular interval and the DSS file version may be either version 7 or version 6 (without 7 extensions).  There are no other functions that are used to store time series data. 
</summary>
            <summary>
This is the function to call to store time series data in a HEC-DSS file.  The data set may be regular-interval or irregular interval and the DSS file version may be either version 7 or version 6 (without 7 extensions).  There are no other functions that are used to store time series data. 
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNewTimes(System.String,System.String,System.String,System.String,System.String)">
            <summary>
Creates and returns a struct to pass data into DSS.  It specifies a time window and a pathname,which fully defines the data set to read.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS.  It specifies a time window and a pathname,which fully defines the data set to read.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNew(System.String)">
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS.  A lower level call often used for retreiving data.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNewIrregDoubles(System.String,System.Double[]@,System.Int32,System.Int32[]@,System.Int32,System.String,System.String,System.String)">
            <summary>
Creates and returns a struct to pass data into DSS  Contains irregular-interval double values.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS  Contains irregular-interval double values.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNewIrregFloats(System.String,System.Single[]@,System.Int32,System.Int32[]@,System.Int32,System.String,System.String,System.String)">
            <summary>
Creates and returns a struct to pass data into DSS  Contains irregular-interval float values.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS  Contains irregular-interval float values.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNewRegDoubles(System.String,System.Double[]@,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
Creates and returns a struct to pass data into DSS  Contains regular-interval time series data for double values.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS  Contains regular-interval time series data for double values.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZStructTsNewRegFloats(System.String,System.Single[]@,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
Creates and returns a struct to pass data into DSS  Contains regular-interval time series data for float values.  Use ZStructFree when finished.
</summary>
            <summary>
Creates and returns a struct to pass data into DSS  Contains regular-interval time series data for float values.  Use ZStructFree when finished.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZIsMissingFloat(System.Double)">
            <summary>
Checks to see if a value is missing
</summary>
            <summary>
Checks to see if a value is missing
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZIsMissingFloat(System.Single)">
            <summary>
Checks to see if a value is missing
</summary>
            <summary>
Checks to see if a value is missing
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZSetMissingDouble(System.Double)">
            <summary>
Sets the missing flag value with a double
</summary>
            <summary>
Sets the missing flag value with a double
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZSetMissingFloat(System.Single)">
            <summary>
Sets the missing flag value with a float
</summary>
            <summary>
Sets the missing flag value with a float
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZMissingFlag">
            <summary>
returns the missing flag value
</summary>
            <summary>
returns the missing flag value
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZFileError(System.Int64[])">
            <summary>
returns the severity of the most severe error
</summary>
            <summary>
returns the severity of the most severe error
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZErrorCode(System.Int64[])">
            <summary>
returns zero, or the last error code that occurred
</summary>
            <summary>
returns zero, or the last error code that occurred
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCheck(System.Int64[],System.String)">
            <summary>
returns either STATUS_RECORD_FOUND, STATUS_RECORD_NOT_FOUND or an error code.
</summary>
            <summary>
returns either STATUS_RECORD_FOUND, STATUS_RECORD_NOT_FOUND or an error code.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZErrorSeverity(System.Int32)">
            <summary>
Will tell you the error severity of the error
</summary>
            <summary>
Will tell you the error severity of the error
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZIsError(System.Int32)">
            <summary>
Will tell you if the given status is an error or not
</summary>
            <summary>
Will tell you if the given status is an error or not
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZSetMessageLevel(System.Int32,System.Int32)">
            <summary>
Sets the message level for a method set.
 Method ID	Value	Method Description
 MESS_METHOD_GLOBAL_ID	0	All methods both in DSS version 6 and 7
 MESS_METHOD_GENERAL_ID	1	All methods in DSS version 7 (includes those below)
 MESS_METHOD_GET_ID	2	Low - level read I / O
 MESS_METHOD_PUT_ID	3	Low - level write I / O
 MESS_METHOD_READ_ID	4	Read methods, except time series
 MESS_METHOD_WRITE_ID	5	Write methods, except time series
 MESS_METHOD_PERM_ID	6	Operations for the file header
 MESS_METHOD_OPEN_ID	7	Opening and creating a DSS file
 MESS_METHOD_CHECK_ID	8	Checking for records
 MESS_METHOD_LOCKING_ID	9	Locking and unlocking methods
 MESS_METHOD_TS_READ_ID	10	Time series read operations
 MESS_METHOD_TS_WRITE_ID	11	Time series write operations
 MESS_METHOD_ALIAS_ID	12	Record alias methods
 MESS_METHOD_COPY_ID	13	Record copying functions
 MESS_METHOD_UTILITY_ID	14	General utility functions(rename, delete, etc.)
 MESS_METHOD_CATALOG_ID	15	Cataloging
 MESS_METHOD_FILE_CHECK_ID	16	Checking file integrity
 MESS_METHOD_JNI_ID	17	Java Native Interface
</summary>
            <summary>
Sets the message level for a method set.
 Method ID	Value	Method Description
 MESS_METHOD_GLOBAL_ID	0	All methods both in DSS version 6 and 7
 MESS_METHOD_GENERAL_ID	1	All methods in DSS version 7 (includes those below)
 MESS_METHOD_GET_ID	2	Low - level read I / O
 MESS_METHOD_PUT_ID	3	Low - level write I / O
 MESS_METHOD_READ_ID	4	Read methods, except time series
 MESS_METHOD_WRITE_ID	5	Write methods, except time series
 MESS_METHOD_PERM_ID	6	Operations for the file header
 MESS_METHOD_OPEN_ID	7	Opening and creating a DSS file
 MESS_METHOD_CHECK_ID	8	Checking for records
 MESS_METHOD_LOCKING_ID	9	Locking and unlocking methods
 MESS_METHOD_TS_READ_ID	10	Time series read operations
 MESS_METHOD_TS_WRITE_ID	11	Time series write operations
 MESS_METHOD_ALIAS_ID	12	Record alias methods
 MESS_METHOD_COPY_ID	13	Record copying functions
 MESS_METHOD_UTILITY_ID	14	General utility functions(rename, delete, etc.)
 MESS_METHOD_CATALOG_ID	15	Cataloging
 MESS_METHOD_FILE_CHECK_ID	16	Checking file integrity
 MESS_METHOD_JNI_ID	17	Java Native Interface
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZCloseLog">
            <summary>
Closes a DSSlog file.  Returns status.  Call ZCloseLog when you are finished with the log file
</summary>
            <summary>
Closes a DSSlog file.  Returns status.  Call ZCloseLog when you are finished with the log file
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZOpenLog(System.String)">
            <summary>
Open a DSS log file with the full path of the file. Returns the status.  Call ZCloseLog when you are finished with the file, or deletion/rename.
</summary>
            <returns>A file pointer of the dss file if opened. Failure returns null.</returns>
            <summary>
Open a DSS log file with the full path of the file. Returns the status.  Call ZCloseLog when you are finished with the file, or deletion/rename.
</summary>
            <returns>A file pointer of the dss file if opened. Failure returns null.</returns>
        </member>
        <member name="M:Hec.Dss.DSS.ZClose(System.Int64[])">
            <summary>
ifltab is the file pointer to close.  Closes a DSS file.  Returns status.  Call ZClose when you are finished with the file, or deletion/rename.
</summary>
            <summary>
ifltab is the file pointer to close.  Closes a DSS file.  Returns status.  Call ZClose when you are finished with the file, or deletion/rename.
</summary>
        </member>
        <member name="M:Hec.Dss.DSS.ZOpen(System.Int64[]@,System.String)">
            <summary>
Open a DSS file with the full path of the file.  Will decide for you to open DSS6 or DSS7.  Returns the status.  Call Zclose when you are finished with the file, or deletion/rename.
</summary>
            <returns>A file pointer of the dss file if opened. Failure returns null.</returns>
            <summary>
Open a DSS file with the full path of the file.  Will decide for you to open DSS6 or DSS7.  Returns the status.  Call Zclose when you are finished with the file, or deletion/rename.
</summary>
            <returns>A file pointer of the dss file if opened. Failure returns null.</returns>
        </member>
    </members>
</doc>